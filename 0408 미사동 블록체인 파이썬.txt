수업순서

1.블록체인의 특징
-transaction 거래 내역 
-snapshot 블럭간에 체인이 있어야 함
-hash 는 무결성을 검증하는 데 사용 <이번 구현에서는 빠짐, 머클루트?>
-node 다른 노드와 네트워킹

2.파이썬 환경설정
-파이참은 디버깅이 용이
-파이참은 메모리를 많이 차지함
-파이참 전에는 이클립스나 비주얼스튜디오에 파이썬 소스를 넣었어 
-파이참은 북마크 기능도 있음

포스트맨은 lastcall을 할 때 던지고 출력해주는 테스트도구 
BurpSuite, Fiddler 도 같은 역할인데 이 둘은 관찰하는데 특화. 
postman 은 개발에 특화
ARC(Advanced Rest Call) 도 많이 씀 

==================
실습 파일 코드리뷰

server = HTTPServer(('', PORT_NUMBER), myHandler)

server는 '' : 모든 IP에 대해, 포트 8080 에 대해 myHandler 처리 
http요청에 대한 

라인 45~54 까지를 통해 소켓서버를 띄울 수 있다

금요일(4/12)까지 디버깅연습
========================
*쓰레드
요청에 따라 원하는 결과 바로 전달하나ㅗ바......

======================
디버깅을 많이 해서 구조를 파악해봐

브레이크포인트를 너무 많이 띄우면 소켓서버가 타임아웃돼서 확인 못할 수도 있슴 -> 나중에는 적은 갯수를 정확한 위치에 찍고 볼 수 있음

우리가 보는 웹브라우저들은 데이터가 끊임없이 왔다갔다하는 소켓통신이 표현된 방식일뿐 ex. 카카오톡, 채팅창 모두 소켓통신이야
인터넷브라우저는 http 통신으로 포장된 소켓통신방식 
======================
header 는 메타정보: 가장 기본이 되는 정보 html 사이즈, 본문의 갯수 
                    개발자들이 많이 보는 메타정보는 useagent. 산업표준이야 
                    ex.2호선은 초록색, 1호선은 파랑색
sen_response 는 약속된 코드를 보내주기 위함  ex. 202, 404
wfile.write()  본문에 추가 

try: 뒷구문을 일단 실행해봐 
except 판단기준: 그중에 예외적으로 판단기준에 해당하는 거 하나만 받겠어
둘다 안 써도 지장은 없지만, 조금 더 안정적인 처리를 할 수 있대

=====================

정상응답 200
페이지낫파운드 404
서버에러 503
=================
정규식 파이썬에서 인덱스 -1 은 제일 마지막
==========
step into 는 한레벨 한레벨 줄 다 들어가 
step over 은 함수 하나 결과나오면 그에 해당하는 결과 

3.API서버에 서비스를 하겠다 
get 방식_ 쿼리로 select
post
put 
delete
4.파이썬으로 블럭 디자인, 해시
5.거래를 설계해 볼 것 
  A -> B에게 전달
  on stock 에서 데이터를 받아서 트랜잭션을 일으켜서 에어컨에 전달하는 
6.거래를 블럭으로 만들기 
7.블럭체인에 합치고 서버에 올리기 
8.주위 네트워크에 전파 & 검증하는 문제 